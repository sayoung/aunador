<?php


use Drupal\d8mail\Instruction\Instruction;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Component\Utility\Html;
use Drupal\Component\Utility\Unicode;
use Drupal\Core\Mail\MailFormatHelper;
use Drupal\Core\Site\Settings;
use Drupal\KernelTests\KernelTestBase;
use Drupal\Core\Entity\EntityInterface;
use Drupal\node\NodeInterface; 
use Drupal\views\ViewExecutable;
use Drupal\views\Plugin\views\query\QueryPluginBase; 


function d8mail_views_query_alter(ViewExecutable $view, QueryPluginBase $query) {
    
      if ($view->id() == 'espace_telechargement') {
    // Traverse through the 'where' part of the query.
    foreach ($query->where as &$condition_group) {
      foreach ($condition_group['conditions'] as &$condition) {	 
           $filter_value = $view->exposed_raw_input['field_ndeg_de_dossier_value'];
           $pecr = array('/%/' , '');
           $rempl = array('M' , 'M');
			 $filter_value_1 = str_replace($pecr, $rempl, $filter_value);
			  //$filter_value_1 = preg_replace('/%/', 'M', $filter_value);
		   $condition = [
             'field' => 'field_ndeg_de_dossier_value',
             'value' => $filter_value_1,
             'operator' => '=',
           ];
         }
      }
   }

   if ($view->id() == 'suivi_de_la_pre_instruction') {
    // Traverse through the 'where' part of the query.
    foreach ($query->where as &$condition_group) {
      foreach ($condition_group['conditions'] as &$condition) {	 
           $filter_value = $view->exposed_raw_input['field_uuid_value'];
			 $filter_value_1 = preg_replace('/%/', 'M', $filter_value);
		   $condition = [
             'field' => 'field_uuid_value',
             'value' => $filter_value_1,
             'operator' => '=',
           ];
         }
      }
   }
      if ($view->id() == 'suivi_de_la_note') {
    // Traverse through the 'where' part of the query.
    foreach ($query->where as &$condition_group) {
      foreach ($condition_group['conditions'] as &$condition) {	 
           $filter_value = $view->exposed_raw_input['field_uuid_value'];
			 $filter_value_1 = preg_replace('/%/', 'M', $filter_value);
		   $condition = [
             'field' => 'field_uuid_value',
             'value' => $filter_value_1,
             'operator' => '=',
           ];
         }
      }
   }
    if ($view->id() == 'suivi_e_prestation') {
    // Traverse through the 'where' part of the query.
    foreach ($query->where as &$condition_group) {
      foreach ($condition_group['conditions'] as &$condition) {	 
           $filter_value = $view->exposed_raw_input['field_code_de_suivi_value'];
			 $filter_value_1 = preg_replace('/%/', 'M', $filter_value);
		   $condition = [
             'field' => 'field_code_de_suivi_value',
             'value' => $filter_value_1,
             'operator' => '=',
           ];
         }
      }
   }
       if ($view->id() == 'telecharger_votre_e_note') {
    // Traverse through the 'where' part of the query.
    foreach ($query->where as &$condition_group) {
      foreach ($condition_group['conditions'] as &$condition) {	 
           $filter_value = $view->exposed_raw_input['field_uuid_value'];
			 $filter_value_1 = preg_replace('/%/', 'M', $filter_value);
		   $condition = [
             'field' => 'field_uuid_value',
             'value' => $filter_value_1,
             'operator' => '=',
           ];
         }
      }
   }
   
}


/**
 * Implements hook_entity_insert().
 */
function d8mail_entity_insert(Drupal\Core\Entity\EntityInterface $entity) {

  if ($entity->getEntityTypeId() !== 'node' || ($entity->getEntityTypeId() === 'node' && $entity->bundle() !== 'pre_instruction')) {
    return;
  }


  Instruction::sendMail($entity->get('field_email_')->value,$entity->get('field_uuid')->value, 'Instruction');
}
function d8mail_entity_update(Drupal\Core\Entity\EntityInterface $entity) {
 
 if ($entity->getEntityTypeId() !== 'node' || ($entity->getEntityTypeId() === 'node' && $entity->bundle() !== 'pre_instruction')) {
    return;
  }
  if (($entity->get('moderation_state')->target_id ) === 'instruction_dispatcher') {
	Instruction::sendMailFinal($entity->get('field_email_')->value, $entity->get('field_uuid')->value, 'Instruction');

}  
  
}
function d8mail_node_presave(Drupal\node\NodeInterface $node) {
if (($node->get('moderation_state')->target_id ) === 'instruction_dispatcher') {
//	Instruction::sendMailFinal($entity->get('field_email_')->value, $entity->get('field_uuid')->value, 'Instruction');
	$node->set('field_cheking', 0);
}  
}
/**  
 * Implements hook_mail().
 */
function d8mail_mail($key, &$message, $params) {
  $options = array(
    'langcode' => $message['langcode'],
  );

  switch ($key) {
    case 'node_insert':
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['subject'] = t('@title', array('@title' => $params['node_title']), $options);
      $message['body'][] = $params['message'];
      break;
  }
}

/**
 * Implements hook_mail_alter().
 */
function d8mail_mail_alter(&$message) {
  switch ($message['key']) {
    case 'node_insert':
      $message['headers']['Content-Type'] = 'text/html; charset=UTF-8; format=flowed; delsp=yes';
      break;
  }
}